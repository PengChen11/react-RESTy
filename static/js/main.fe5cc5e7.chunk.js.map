{"version":3,"sources":["components/header/header.js","components/form/form.js","components/results/results.js","components/history/history.js","components/footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","React","Component","require","If","Then","Form","props","handleChangeUrl","e","url","target","value","setState","request","state","handleChangeMethod","method","data","document","getElementById","handleChangeData","handleRequest","a","preventDefault","spiner","requestWithBodyData","JSON","parse","error","message","getRequest","result","isValidUrl","axios","URL","_","MethodButton","id","className","onClick","toUpperCase","JsonArea","name","spellCheck","placeholder","disabled","onChange","rows","cols","onSubmit","this","htmlFor","type","condition","color","height","width","Results","src","headers","History","handleHistoryRequest","reqObj","click","stringify","renderQueryHistory","historyReqests","history","map","historyReq","index","Footer","App","replyData","resultData","concat","status","saveSucessfulRequestHistory","sessionStorage","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fe5cc5e7.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\n\nclass Header extends React.Component{\n  render(){\n    return (\n      <header>\n        <h1>RESTy</h1>\n        {/* <nav>\n          <ul>\n            <li>\n              <NavLink to=\"/\">Home</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/\">History</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/\">Help</NavLink>\n            </li>\n          </ul>\n        </nav> */}\n    \n    \n      </header>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './form.scss';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nconst { If, Then } = require('react-if');\n\nclass Form extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      request: {\n        url: '',\n        method: 'get',\n        data: '',\n      },\n      spiner:false,\n    };\n  }\n\n\n  handleChangeUrl = (e)=>{\n    let url = e.target.value;\n    this.setState({ request: { ...this.state.request, url } });\n  }\n\n  handleChangeMethod = (method) =>{\n    this.setState({ request: { \n      ...this.state.request, \n      method,\n      data: '',\n    } });\n    if (method != 'post' || method != 'put'){\n      document.getElementById('jsonBody').value = null;\n    }\n\n  }\n\n  handleChangeData = (e)=>{\n    let data = e.target.value;\n    this.setState({ request: { ...this.state.request, data}});\n  }\n\n  handleRequest = async (e)=>{\n    e.preventDefault();\n    this.setState({spiner: true});\n    let requestWithBodyData;\n    if (this.state.request.data){\n      try {\n        requestWithBodyData = JSON.parse(this.state.request.data);\n      }\n      catch (err){\n        const error = {\n          message: 'JSON data validation failed, please double check your JSON input. Quotes needed for both keys and values',\n        };\n        this.props.getRequest({result: error});\n        return;\n      }\n    }\n\n    const request = {\n      url: this.state.request.url,\n      method: this.state.request.method,\n      data: requestWithBodyData,\n    };\n\n    let data = {\n      request,\n      result: {},\n    };\n\n    if (!this.isValidUrl(request.url)){\n      const error = {\n        message: 'Url validation failed, please double check your url input. Full url requested, like http(s)://xxx.xxx ',\n      };\n      data = {\n        ...data,\n        result:error,\n      };\n      this.props.getRequest(data);\n      return;\n    } else {\n      try {\n        const result = await axios(request);\n        data = {\n          request,\n          result,\n        };\n        this.props.getRequest(data);\n        this.setState({spiner: false});\n      }\n      catch (error){\n        data = {\n          ...data,\n          result:error,\n        };\n        this.props.getRequest(data);\n        this.setState({spiner: false});\n      }\n    }\n  };\n\n  isValidUrl = (url) => {\n    try {\n      new URL(url);\n    } catch (_) {\n      return false;  \n    }\n  \n    return true;\n  }\n\n  MethodButton = (method)=>{\n    let id = `${method}Button`;\n\n    return (\n      <span id = {id} className={`method ${this.state.request.method === method}`} onClick={() => this.handleChangeMethod(method)}>\n        {method.toUpperCase()}\n      </span>\n    );\n  }\n\n  JsonArea = (method)=>{\n    return (\n      <textarea id='jsonBody' name=\"data\" spellCheck=\"false\" placeholder=\"Please use strignified JSON data, text area disabled for GET and DELETE methods\" disabled={method==='get' || method==='delete'}  onChange = {this.handleChangeData} rows=\"3\" cols=\"90\"></textarea> \n    );\n  }\n\n\n  render(){\n    return (\n      <>\n        <form id = 'api' onSubmit = {this.handleRequest}>\n          <div>\n            <label htmlFor=\"url\">URL:</label>\n            <input id='urlInput' type=\"text\" name=\"url\" placeholder=\"http://api.url.here\"  onChange={this.handleChangeUrl}/>\n            <button type='submit' disabled={!this.state.request.url}>GO!</button>\n          </div>\n          <div className=\"methods\">\n            {this.MethodButton('get')}\n            {this.MethodButton('post')}\n            {this.MethodButton('put')}\n            {this.MethodButton('delete')}\n            {/* <label htmlFor=\"data\"></label> */}\n            {this.JsonArea(this.state.request.method)}\n          </div>\n        </form>\n        <If condition={this.state.spiner}>\n          <Then>\n            <div id='spiner'>\n              <Loader type=\"ThreeDots\" color=\"#f5f5f5\" height=\"100\" width=\"200\" />\n            </div>\n          </Then>\n        </If>\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  getRequest: PropTypes.func,\n  reRequest: PropTypes.object,\n};\n\nexport default Form;","import React from 'react';\nimport './results.scss';\nimport PropTypes from 'prop-types';\nimport ReactJson from 'react-json-view';\n\nclass Results extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  render(){\n    return (\n      <section className=\"results\">\n        <h2>Headers:</h2>\n        <ReactJson src={this.props.result.headers} name='Headers' />\n        <h2>Results:</h2>\n        <ReactJson src={this.props.result.data} name='data' />\n      </section>\n    );\n  }\n}\n\nResults.propTypes = {\n  result: PropTypes.object,\n};\n\nexport default Results;\n","import React from 'react';\nimport './history.scss';\nimport PropTypes from 'prop-types';\n\nclass History extends React.Component{\n\n  handleHistoryRequest=(reqObj)=>{\n    let id = `${reqObj.method}Button`;\n    document.getElementById(id).click();\n    document.getElementById('urlInput').value = reqObj.url;\n\n    if (reqObj.data){\n      document.getElementById('jsonBody').value = JSON.stringify(reqObj.data) ;\n    }\n  }\n\n  renderQueryHistory=()=>{\n\n    const history=this.props.history;\n\n    const historyReqests = history.map((historyReq, index) =>\n      <li key={index}>\n        <span className={`method ${historyReq.method}`}>{historyReq.method}</span>\n        <button className='url' onClick={()=>this.handleHistoryRequest(historyReq)}>{historyReq.url}</button>\n      </li>\n    );\n\n    return (\n      <ul id='history'>\n        {historyReqests}\n      </ul>\n    );\n  }\n\n\n  render(){\n    return (\n      <aside className=\"history\">\n        <h2>History</h2>\n        {this.renderQueryHistory()}\n      </aside>\n    );\n  }\n}\n\nHistory.propTypes = {\n  history: PropTypes.array,\n};\n\nexport default History;","import React from 'react';\nimport './footer.scss';\n\nclass Footer extends React.Component{\n  render(){\n    return (\n      <footer>\n        <p> &#169; 2018 Code Fellows </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport './App.scss';\nimport Header from './components/header/header';\nimport Form from './components/form/form';\nimport Results from './components/results/results';\nimport History from './components/history/history';\nimport Footer from './components/footer/footer';\nconst { If, Then } = require('react-if');\n//{ If, Then, Else, When, Unless, Switch, Case, Default }\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [],\n    };\n  }\n\n  getRequest = (replyData)=>{\n    let resultData = {\n      headers: replyData.result.headers || {error: 'no headers found'},\n      data: replyData.result.data || {error: replyData.result.message || 'Unknown Error'},\n    };\n    this.setState({\n      history: [...this.state.history.concat(replyData.request)],\n      result: resultData,\n    });\n    if (replyData.result.status ===200){\n      this.saveSucessfulRequestHistory(replyData);\n    }\n  };\n\n  saveSucessfulRequestHistory = (replyData) =>{\n    sessionStorage.setItem(JSON.stringify(replyData.request), JSON.stringify(replyData.result));\n  }\n\n\n  render(){\n    return (\n      <>\n        <Header />\n        <Form getRequest={this.getRequest}/>\n        <main>\n          \n          <If condition={this.state.result}>\n            <Then>\n              <History history={this.state.history}/>\n              <Results result={this.state.result}/>\n            </Then>\n          </If>\n        </main>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}