{"version":3,"sources":["components/header/header.js","components/form/form.js","components/results/results.js","components/history/history.js","components/footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","React","Component","Form","props","handleChangeUrl","e","url","target","value","setState","request","state","handleChangeMethod","method","data","handleChangeData","handleRequest","a","preventDefault","requestWithBodyData","JSON","parse","error","message","getRequest","result","isValidUrl","axios","URL","_","MethodButton","testID","data-testid","className","onClick","toUpperCase","JsonArea","name","spellCheck","placeholder","disabled","onChange","id","onSubmit","this","htmlFor","type","Results","src","headers","History","renderQueryHistory","classes","history","handleState","requestStr","stringify","reRenderResult","sessionStorage","getItem","updateResult","resultStr","Footer","App","replyData","resultData","status","saveSucessfulRequestHistory","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4a2d256.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\n\nclass Header extends React.Component{\n  render(){\n    return (\n      <header>\n        <h1>RESTy</h1>\n        {/* <nav>\n          <ul>\n            <li>\n              <NavLink to=\"/\">Home</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/\">History</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/\">Help</NavLink>\n            </li>\n          </ul>\n        </nav> */}\n    \n    \n      </header>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './form.scss';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nclass Form extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      request: {\n        url: '',\n        method: 'get',\n        data: '',\n      },\n    };\n  }\n\n  handleChangeUrl = (e)=>{\n    let url = e.target.value;\n    this.setState({ request: { ...this.state.request, url } });\n  }\n\n  handleChangeMethod = (method) =>{\n    this.setState({ request: { \n      ...this.state.request, \n      method,\n      data: '',\n    } });\n  }\n\n  handleChangeData = (e)=>{\n    let data = e.target.value;\n    this.setState({ request: { ...this.state.request, data}});\n  }\n\n  handleRequest = async (e)=>{\n    e.preventDefault();\n    let requestWithBodyData;\n    if (this.state.request.data){\n      try {\n        requestWithBodyData = JSON.parse(this.state.request.data);\n      }\n      catch (err){\n        const error = {\n          message: 'JSON data validation failed, please double check your JSON input. Quotes needed for both keys and values',\n        };\n        this.props.getRequest({result: error});\n        return;\n      }\n    }\n\n    const request = {\n      url: this.state.request.url,\n      method: this.state.request.method,\n      data: requestWithBodyData || {},\n    };\n\n    let data = {\n      request,\n      result: {},\n    };\n\n    if (!this.isValidUrl(request.url)){\n      const error = {\n        message: 'Url validation failed, please double check your url input. Full url requested, like http(s)://xxx.xxx ',\n      };\n      data = {\n        ...data,\n        result:error,\n      };\n      this.props.getRequest(data);\n      return;\n    } else {\n      try {\n        const result = await axios(request);\n        data = {\n          request,\n          result,\n        };\n        this.props.getRequest(data);\n      }\n      catch (error){\n        data = {\n          ...data,\n          result:error,\n        };\n        this.props.getRequest(data);\n      }\n    }\n  };\n\n  isValidUrl = (url) => {\n    try {\n      new URL(url);\n    } catch (_) {\n      return false;  \n    }\n  \n    return true;\n  }\n\n  MethodButton = (method)=>{\n    let testID = `${method}Button`;\n\n    return (\n      <span data-testid = {testID} className={`method ${this.state.request.method === method}`} onClick={() => this.handleChangeMethod(method)}>\n        {method.toUpperCase()}\n      </span>\n    );\n  }\n\n  JsonArea = (method)=>{\n    return (\n      <textarea data-testid='jsonBody' name=\"data\" spellCheck=\"false\" placeholder=\"Please use strignified JSON data, text area disabled for GET and DELETE methods\" disabled={method==='get' || method==='delete'} value={this.state.request.data} onChange = {this.handleChangeData}></textarea>\n    );\n  }\n\n\n  render(){\n    return (\n      <>\n        <form id = 'api' onSubmit = {this.handleRequest}>\n          <div>\n            <label htmlFor=\"url\">URL:</label>\n            <input data-testid='urlInput' type=\"text\" name=\"url\" placeholder=\"http://api.url.here\"  onChange={this.handleChangeUrl}/>\n            <button type='submit' disabled={!this.state.request.url}>GO!</button>\n          </div>\n          <div className=\"methods\">\n            {this.MethodButton('get')}\n            {this.MethodButton('post')}\n            {this.MethodButton('put')}\n            {this.MethodButton('delete')}\n            <label htmlFor=\"data\"></label>\n            {this.JsonArea(this.state.request.method)}\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  getRequest: PropTypes.func,\n};\n\nexport default Form;","import React from 'react';\nimport './results.scss';\nimport PropTypes from 'prop-types';\nimport ReactJson from 'react-json-view';\n\nclass Results extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  render(){\n    return (\n      <section className=\"results\">\n        <ReactJson src={this.props.result.headers} name='Headers' />\n        <ReactJson src={this.props.result.data} name='data' />\n      </section>\n    );\n  }\n}\n\nResults.propTypes = {\n  result: PropTypes.object,\n};\n\nexport default Results;\n","import React from 'react';\nimport './history.scss';\nimport PropTypes from 'prop-types';\n\nclass History extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      requestStr: '',\n      resultStr:'',\n    };\n  }\n\n  renderQueryHistory=()=>{\n\n    let classes = `method ${this.props.history.request.method}`;\n    let newElement = <li ><button className = {classes} >{this.props.history.request.method}</button>{this.props.history.request.url}</li>;\n    return newElement;\n  }\n\n  handleState = ()=>{\n    this.setState({\n      requestStr: JSON.stringify(this.props.history.request),\n    });\n  }\n\n  reRenderResult=()=>{\n    let result = sessionStorage.getItem(this.state.requestStr);\n\n    this.props.updateResult(JSON.parse(result));\n  }\n\n  render(){\n    return (\n      <aside className=\"history\">\n        <h2>History</h2>\n        <ul id='history'>\n          {this.renderQueryHistory()}\n        </ul>\n      </aside>\n    );\n  }\n}\n\nHistory.propTypes = {\n  history: PropTypes.object,\n  updateResult: PropTypes.func,\n};\n\nexport default History;","import React from 'react';\nimport './footer.scss';\n\nclass Footer extends React.Component{\n  render(){\n    return (\n      <footer>\n        <p> &#169; 2018 Code Fellows </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport './App.scss';\nimport Header from './components/header/header';\nimport Form from './components/form/form';\nimport Results from './components/results/results';\nimport History from './components/history/history';\nimport Footer from './components/footer/footer';\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      request: {},\n      result: {},\n    };\n  }\n\n  getRequest = (replyData)=>{\n    let resultData = {\n      headers: replyData.result.headers || {error: 'no headers found'},\n      data: replyData.result.data || {error: replyData.result.message || 'Unknown Error'},\n    };\n    this.setState({\n      request: replyData.request,\n      result: resultData,\n    });\n    if (replyData.result.status ===200){\n      this.saveSucessfulRequestHistory(replyData);\n    }\n  };\n\n  saveSucessfulRequestHistory = (replyData) =>{\n    sessionStorage.setItem(JSON.stringify(replyData.request), JSON.stringify(replyData.result));\n  }\n\n  updateResult = (result) =>{\n    this.setState({\n      result: result,\n    });\n  }\n\n\n\n  render(){\n    return (\n      <>\n        <Header />\n        <Form getRequest={this.getRequest}/>\n        <main>\n          <History history={this.state} updateResult={this.updateResult}/>\n          <Results result={this.state.result}/>\n        </main>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}